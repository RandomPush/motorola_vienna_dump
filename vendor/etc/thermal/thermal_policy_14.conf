[policy_type]
# V1.1
# If permanent= Yes, this policy is still valid after reboot
permanent= Yes

[LTF-disable-throttling]
# If HW_protection= disabled, it will turn off
# SW shutdown protections and LVTS HW reboot protection
HW_protection= enabled

[mtk-skin-control]
sensor= ap_ntc
max_target_tj= 85000
min_target_tj= 85000
trip_tpcb= 78000
target_tpcb= 80000

[vtskin-param]
sensor= vtskin1
operation= coefficient
ref_sensor= [quiet_ntc,ltepa_ntc]
ref_coef= [79000000,14000000]

[thermalhal-threshold]
type= SKIN
sensor= vtskin1
level= [severe, critical, emergency, shutdown]
threshold= [80000, 103000, 104000, 105000]

[user-virtual-sensor]
virtual_sensor= back_temp
ref_sensor= [quiet_ntc,cam_ntc,battery]
ref_sensor_class=[kernel,kernel,kernel]
operation= coefficient
coef= [0.7361,0.0499,0.2411]
offset=-2043
trip_sensor= ap_ntc
trip_sensor_type=kernel
trip_temp= 10000
hysteresis= 2000

[user-virtual-sensor]
virtual_sensor= front_temp
ref_sensor= [quiet_ntc,battery]
ref_sensor_class=[kernel,kernel]
operation= coefficient
coef= [0.9618,0.03]
offset=169
trip_sensor= ap_ntc
trip_sensor_type=kernel
trip_temp= 10000
hysteresis= 2000

[mtk-cpu-table-mapping]
mode= enabled
sensor= back_temp
cluster= 0
threshold= [45000, 47000, 48000, 50000, 52000]
hysteresis= [2000, 2000, 1000, 2000, 2000]
freq= [1800000, 1600000, 1500000, 1300000, 1200000]

[mtk-cpu-table-mapping]
mode= enabled
sensor= back_temp
cluster= 1
threshold= [43000, 46000, 48000, 50000, 52000]
hysteresis= [2000, 3000, 2000, 2000, 2000]
freq= [2400000, 1900000, 1800000, 1400000, 1300000]

[mtk-gpu-table-mapping]
mode= enabled
sensor= front_temp
threshold= [60000]
hysteresis= [1000]
freq= [978000]

[charger-cooler]
mode= enabled
sensor= back_temp
threshold= [37000, 39000, 40000, 44000]
hysteresis= [1000, 2000, 1000, 4000]
current= [7000, 6000, 4000, 3000]

[general-cooler]
sensor= wcn_ntc
sensor_class= kernel
cooler= moto_wlc
cooler_class= kernel
algorithm= table_mapping
threshold= [32000, 44000, 45000, 49000, 50000, 51000]
hysteresis= [2000, 4000, 1000, 4000, 1000, 1000]
limit_state= [2, 3, 4, 5, 6, 7]